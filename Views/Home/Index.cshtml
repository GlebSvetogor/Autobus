@model IEnumerable<UrlShortener.Models.UrlMapping>

@{
    ViewData["Title"] = "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞";
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
}

<div class="row">
    <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="display-4">üìä –°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ URL</h1>
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="bi bi-plus-circle"></i> –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É
            </a>
        </div>

        @if (Model.Any())
        {
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>–î–ª–∏–Ω–Ω—ã–π URL</th>
                                    <th>–°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π URL</th>
                                    <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                                    <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤</th>
                                    <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <div style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" 
                                                 title="@item.OriginalUrl">
                                                <a href="@item.OriginalUrl" target="_blank" class="text-decoration-none">
                                                    @item.OriginalUrl
                                                </a>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <a href="/@item.ShortCode" target="_blank" class="text-decoration-none me-2">
                                                    @baseUrl/@item.ShortCode
                                                </a>
                                                <button class="btn btn-sm btn-outline-secondary" 
                                                        onclick="copyToClipboard('@baseUrl/@item.ShortCode')" 
                                                        title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å">
                                                    üìã
                                                </button>
                                            </div>
                                        </td>
                                        <td>@item.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                                        <td>
                                            <span class="badge bg-info fs-6">@item.ClickCount</span>
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                                                </a>
                                                <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline"
                                                      onsubmit="return confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Å—Å—ã–ª–∫—É?')">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title">üîó –ü–æ–∫–∞ –Ω–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫</h3>
                        <p class="card-text text-muted">–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∫–æ—Ä–æ—Ç–∫—É—é —Å—Å—ã–ª–∫—É!</p>
                        <a asp-action="Create" class="btn btn-primary btn-lg">–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(function() {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            const toast = document.createElement('div');
            toast.className = 'toast align-items-center text-white bg-success border-0 position-fixed top-0 end-0 m-3';
            toast.style.zIndex = '9999';
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        ‚úÖ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            document.body.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è
            toast.addEventListener('hidden.bs.toast', () => {
                document.body.removeChild(toast);
            });
        }).catch(function(err) {
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É: ' + err);
        });
    }
</script>
